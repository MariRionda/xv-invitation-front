"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./components/usefulFunctions/encryptar.js":
/*!*************************************************!*\
  !*** ./components/usefulFunctions/encryptar.js ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compare\": function() { return /* binding */ compare; },\n/* harmony export */   \"encrypted\": function() { return /* binding */ encrypted; }\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-client)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nconst crypto = __webpack_require__(/*! crypto */ \"(app-client)/./node_modules/next/dist/compiled/crypto-browserify/index.js\");\nconst zlib = __webpack_require__(/*! zlib */ \"(app-client)/./node_modules/next/dist/compiled/browserify-zlib/index.js\");\n// Generar clave secreta\nconst secretKey = crypto.randomBytes(8); // 256 bits\nconst encrypted = (name)=>{\n    // Cifrar el nombre utilizando AES-256-CBC\n    const iv = crypto.randomBytes(8); // Initialization vector\n    const cipher = crypto.createCipheriv(\"aes-256-cbc\", secretKey, iv);\n    let encrypted = cipher.update(name, \"utf8\", \"hex\");\n    encrypted += cipher.final(\"hex\");\n    // Comprimir el texto cifrado\n    const compressed = zlib.deflateSync(Buffer.from(encrypted, \"hex\")).toString(\"base64\");\n    // Generar un string que represente el nombre cifrado y la clave secreta\n    const encryptedString = \"\".concat(iv.toString(\"hex\"), \".\").concat(compressed);\n    return encryptedString;\n};\nconst compare = (name, encryptedString)=>{\n    // Descifrar el nombre utilizando la clave secreta\n    // Descomprimir el texto cifrado\n    const parts = encryptedString.split(\".\");\n    const decompressed = zlib.inflateSync(Buffer.from(parts[1], \"base64\")).toString(\"hex\");\n    const decipher = crypto.createDecipheriv(\"aes-256-cbc\", secretKey, Buffer.from(parts[0], \"hex\"));\n    let decrypted = decipher.update(decompressed, \"hex\", \"utf8\");\n    decrypted += decipher.final(\"utf8\");\n    return decrypted === name;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vY29tcG9uZW50cy91c2VmdWxGdW5jdGlvbnMvZW5jcnlwdGFyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLE9BQU9ELG1CQUFPQSxDQUFDO0FBRXJCLHdCQUF3QjtBQUN4QixNQUFNRSxZQUFZSCxPQUFPSSxXQUFXLENBQUMsSUFBSSxXQUFXO0FBRTdDLE1BQU1DLFlBQVksQ0FBQ0MsT0FBUztJQUVuQywwQ0FBMEM7SUFDMUMsTUFBTUMsS0FBS1AsT0FBT0ksV0FBVyxDQUFDLElBQUksd0JBQXdCO0lBQzFELE1BQU1JLFNBQVNSLE9BQU9TLGNBQWMsQ0FBQyxlQUFlTixXQUFXSTtJQUMvRCxJQUFJRixZQUFZRyxPQUFPRSxNQUFNLENBQUNKLE1BQU0sUUFBUTtJQUM1Q0QsYUFBYUcsT0FBT0csS0FBSyxDQUFDO0lBRTFCLDZCQUE2QjtJQUM3QixNQUFNQyxhQUFhVixLQUFLVyxXQUFXLENBQUNDLE1BQU1BLENBQUNDLElBQUksQ0FBQ1YsV0FBVyxRQUFRVyxRQUFRLENBQUM7SUFFNUUsd0VBQXdFO0lBQ3hFLE1BQU1DLGtCQUFrQixHQUF5QkwsT0FBdEJMLEdBQUdTLFFBQVEsQ0FBQyxRQUFPLEtBQWMsT0FBWEo7SUFFakQsT0FBT0s7QUFDUCxFQUFDO0FBRU0sTUFBTUMsVUFBVSxDQUFDWixNQUFPVyxrQkFBcUI7SUFDcEQsa0RBQWtEO0lBRWxELGdDQUFnQztJQUNoQyxNQUFNRSxRQUFRRixnQkFBZ0JHLEtBQUssQ0FBQztJQUNwQyxNQUFNQyxlQUFlbkIsS0FBS29CLFdBQVcsQ0FBQ1IsTUFBTUEsQ0FBQ0MsSUFBSSxDQUFDSSxLQUFLLENBQUMsRUFBRSxFQUFFLFdBQVdILFFBQVEsQ0FBQztJQUVoRixNQUFNTyxXQUFXdkIsT0FBT3dCLGdCQUFnQixDQUFDLGVBQWVyQixXQUFXVyxNQUFNQSxDQUFDQyxJQUFJLENBQUNJLEtBQUssQ0FBQyxFQUFFLEVBQUU7SUFDekYsSUFBSU0sWUFBWUYsU0FBU2IsTUFBTSxDQUFDVyxjQUFjLE9BQU87SUFDckRJLGFBQWFGLFNBQVNaLEtBQUssQ0FBQztJQUU1QixPQUFRYyxjQUFZbkI7QUFDcEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3VzZWZ1bEZ1bmN0aW9ucy9lbmNyeXB0YXIuanM/YTRiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcclxuY29uc3QgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcclxuXHJcbi8vIEdlbmVyYXIgY2xhdmUgc2VjcmV0YVxyXG5jb25zdCBzZWNyZXRLZXkgPSBjcnlwdG8ucmFuZG9tQnl0ZXMoOCk7IC8vIDI1NiBiaXRzXHJcblxyXG5leHBvcnQgY29uc3QgZW5jcnlwdGVkID0gKG5hbWUpID0+IHtcclxuXHJcbi8vIENpZnJhciBlbCBub21icmUgdXRpbGl6YW5kbyBBRVMtMjU2LUNCQ1xyXG5jb25zdCBpdiA9IGNyeXB0by5yYW5kb21CeXRlcyg4KTsgLy8gSW5pdGlhbGl6YXRpb24gdmVjdG9yXHJcbmNvbnN0IGNpcGhlciA9IGNyeXB0by5jcmVhdGVDaXBoZXJpdignYWVzLTI1Ni1jYmMnLCBzZWNyZXRLZXksIGl2KTtcclxubGV0IGVuY3J5cHRlZCA9IGNpcGhlci51cGRhdGUobmFtZSwgJ3V0ZjgnLCAnaGV4Jyk7XHJcbmVuY3J5cHRlZCArPSBjaXBoZXIuZmluYWwoJ2hleCcpO1xyXG5cclxuLy8gQ29tcHJpbWlyIGVsIHRleHRvIGNpZnJhZG9cclxuY29uc3QgY29tcHJlc3NlZCA9IHpsaWIuZGVmbGF0ZVN5bmMoQnVmZmVyLmZyb20oZW5jcnlwdGVkLCAnaGV4JykpLnRvU3RyaW5nKCdiYXNlNjQnKTtcclxuXHJcbi8vIEdlbmVyYXIgdW4gc3RyaW5nIHF1ZSByZXByZXNlbnRlIGVsIG5vbWJyZSBjaWZyYWRvIHkgbGEgY2xhdmUgc2VjcmV0YVxyXG5jb25zdCBlbmNyeXB0ZWRTdHJpbmcgPSBgJHtpdi50b1N0cmluZygnaGV4Jyl9LiR7Y29tcHJlc3NlZH1gO1xyXG5cclxucmV0dXJuIGVuY3J5cHRlZFN0cmluZ1xyXG59IFxyXG5cclxuZXhwb3J0IGNvbnN0IGNvbXBhcmUgPSAobmFtZSAsIGVuY3J5cHRlZFN0cmluZyApID0+IHtcclxuLy8gRGVzY2lmcmFyIGVsIG5vbWJyZSB1dGlsaXphbmRvIGxhIGNsYXZlIHNlY3JldGFcclxuXHJcbi8vIERlc2NvbXByaW1pciBlbCB0ZXh0byBjaWZyYWRvXHJcbmNvbnN0IHBhcnRzID0gZW5jcnlwdGVkU3RyaW5nLnNwbGl0KCcuJyk7XHJcbmNvbnN0IGRlY29tcHJlc3NlZCA9IHpsaWIuaW5mbGF0ZVN5bmMoQnVmZmVyLmZyb20ocGFydHNbMV0sICdiYXNlNjQnKSkudG9TdHJpbmcoJ2hleCcpO1xyXG5cclxuY29uc3QgZGVjaXBoZXIgPSBjcnlwdG8uY3JlYXRlRGVjaXBoZXJpdignYWVzLTI1Ni1jYmMnLCBzZWNyZXRLZXksIEJ1ZmZlci5mcm9tKHBhcnRzWzBdLCAnaGV4JykpO1xyXG5sZXQgZGVjcnlwdGVkID0gZGVjaXBoZXIudXBkYXRlKGRlY29tcHJlc3NlZCwgJ2hleCcsICd1dGY4Jyk7XHJcbmRlY3J5cHRlZCArPSBkZWNpcGhlci5maW5hbCgndXRmOCcpO1xyXG5cclxucmV0dXJuIChkZWNyeXB0ZWQ9PT1uYW1lKVxyXG59XHJcbiJdLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwiemxpYiIsInNlY3JldEtleSIsInJhbmRvbUJ5dGVzIiwiZW5jcnlwdGVkIiwibmFtZSIsIml2IiwiY2lwaGVyIiwiY3JlYXRlQ2lwaGVyaXYiLCJ1cGRhdGUiLCJmaW5hbCIsImNvbXByZXNzZWQiLCJkZWZsYXRlU3luYyIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsImVuY3J5cHRlZFN0cmluZyIsImNvbXBhcmUiLCJwYXJ0cyIsInNwbGl0IiwiZGVjb21wcmVzc2VkIiwiaW5mbGF0ZVN5bmMiLCJkZWNpcGhlciIsImNyZWF0ZURlY2lwaGVyaXYiLCJkZWNyeXB0ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./components/usefulFunctions/encryptar.js\n"));

/***/ })

});