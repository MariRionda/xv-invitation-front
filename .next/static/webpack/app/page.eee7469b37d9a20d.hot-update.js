"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./components/usefulFunctions/encryptar.js":
/*!*************************************************!*\
  !*** ./components/usefulFunctions/encryptar.js ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compare\": function() { return /* binding */ compare; },\n/* harmony export */   \"encrypted\": function() { return /* binding */ encrypted; }\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-client)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nconst encrypted = (name)=>{\n    const key = crypto.randomBytes(16); // 128 bits\n    let encrypted = \"\";\n    for(let i = 0; i < name.length; i++){\n        encrypted += String.fromCharCode(name.charCodeAt(i) ^ key[i % key.length]);\n    }\n    const encryptedString = \"\".concat(key.toString(\"hex\"), \".\").concat(Buffer.from(encrypted).toString(\"hex\"));\n    return encryptedString;\n};\nconst compare = (name, encryptedString)=>{\n    const parts = encryptedString.split(\".\");\n    const key = Buffer.from(parts[0], \"hex\");\n    const encrypted = Buffer.from(parts[1], \"hex\");\n    let decrypted = \"\";\n    for(let i = 0; i < encrypted.length; i++){\n        decrypted += String.fromCharCode(encrypted[i] ^ key[i % key.length]);\n    }\n    return decrypted === name;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vY29tcG9uZW50cy91c2VmdWxGdW5jdGlvbnMvZW5jcnlwdGFyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQU1BLFlBQVksQ0FBQ0MsT0FBUztJQUMvQixNQUFNQyxNQUFNQyxPQUFPQyxXQUFXLENBQUMsS0FBSyxXQUFXO0lBQy9DLElBQUlKLFlBQVk7SUFDaEIsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUlKLEtBQUtLLE1BQU0sRUFBRUQsSUFBSztRQUNwQ0wsYUFBYU8sT0FBT0MsWUFBWSxDQUFDUCxLQUFLUSxVQUFVLENBQUNKLEtBQUtILEdBQUcsQ0FBQ0csSUFBSUgsSUFBSUksTUFBTSxDQUFDO0lBQzNFO0lBQ0EsTUFBTUksa0JBQWtCLEdBQTBCQyxPQUF2QlQsSUFBSVUsUUFBUSxDQUFDLFFBQU8sS0FBMEMsT0FBdkNELE1BQU1BLENBQUNFLElBQUksQ0FBQ2IsV0FBV1ksUUFBUSxDQUFDO0lBQ2xGLE9BQU9GO0FBQ1QsRUFBQztBQUVNLE1BQU1JLFVBQVUsQ0FBQ2IsTUFBTVMsa0JBQW9CO0lBQ2hELE1BQU1LLFFBQVFMLGdCQUFnQk0sS0FBSyxDQUFDO0lBQ3BDLE1BQU1kLE1BQU1TLE1BQU1BLENBQUNFLElBQUksQ0FBQ0UsS0FBSyxDQUFDLEVBQUUsRUFBRTtJQUNsQyxNQUFNZixZQUFZVyxNQUFNQSxDQUFDRSxJQUFJLENBQUNFLEtBQUssQ0FBQyxFQUFFLEVBQUU7SUFDeEMsSUFBSUUsWUFBWTtJQUNoQixJQUFLLElBQUlaLElBQUksR0FBR0EsSUFBSUwsVUFBVU0sTUFBTSxFQUFFRCxJQUFLO1FBQ3pDWSxhQUFhVixPQUFPQyxZQUFZLENBQUNSLFNBQVMsQ0FBQ0ssRUFBRSxHQUFHSCxHQUFHLENBQUNHLElBQUlILElBQUlJLE1BQU0sQ0FBQztJQUNyRTtJQUNBLE9BQU9XLGNBQWNoQjtBQUN2QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvdXNlZnVsRnVuY3Rpb25zL2VuY3J5cHRhci5qcz9hNGJlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlbmNyeXB0ZWQgPSAobmFtZSkgPT4ge1xyXG4gICAgY29uc3Qga2V5ID0gY3J5cHRvLnJhbmRvbUJ5dGVzKDE2KTsgLy8gMTI4IGJpdHNcclxuICAgIGxldCBlbmNyeXB0ZWQgPSAnJztcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbmFtZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICBlbmNyeXB0ZWQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShuYW1lLmNoYXJDb2RlQXQoaSkgXiBrZXlbaSAlIGtleS5sZW5ndGhdKTtcclxuICAgIH1cclxuICAgIGNvbnN0IGVuY3J5cHRlZFN0cmluZyA9IGAke2tleS50b1N0cmluZygnaGV4Jyl9LiR7QnVmZmVyLmZyb20oZW5jcnlwdGVkKS50b1N0cmluZygnaGV4Jyl9YDtcclxuICAgIHJldHVybiBlbmNyeXB0ZWRTdHJpbmc7XHJcbiAgfVxyXG4gIFxyXG4gIGV4cG9ydCBjb25zdCBjb21wYXJlID0gKG5hbWUsIGVuY3J5cHRlZFN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgcGFydHMgPSBlbmNyeXB0ZWRTdHJpbmcuc3BsaXQoJy4nKTtcclxuICAgIGNvbnN0IGtleSA9IEJ1ZmZlci5mcm9tKHBhcnRzWzBdLCAnaGV4Jyk7XHJcbiAgICBjb25zdCBlbmNyeXB0ZWQgPSBCdWZmZXIuZnJvbShwYXJ0c1sxXSwgJ2hleCcpO1xyXG4gICAgbGV0IGRlY3J5cHRlZCA9ICcnO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbmNyeXB0ZWQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgZGVjcnlwdGVkICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoZW5jcnlwdGVkW2ldIF4ga2V5W2kgJSBrZXkubGVuZ3RoXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGVjcnlwdGVkID09PSBuYW1lO1xyXG4gIH1cclxuICBcclxuXHJcbiJdLCJuYW1lcyI6WyJlbmNyeXB0ZWQiLCJuYW1lIiwia2V5IiwiY3J5cHRvIiwicmFuZG9tQnl0ZXMiLCJpIiwibGVuZ3RoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2hhckNvZGVBdCIsImVuY3J5cHRlZFN0cmluZyIsIkJ1ZmZlciIsInRvU3RyaW5nIiwiZnJvbSIsImNvbXBhcmUiLCJwYXJ0cyIsInNwbGl0IiwiZGVjcnlwdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./components/usefulFunctions/encryptar.js\n"));

/***/ })

});